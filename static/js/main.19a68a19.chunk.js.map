{"version":3,"sources":["components/Tmdb/Tmdb.js","components/Tmdb/index.js","components/MovieRow/index.js","components/MovieRow/MovieRow.jsx","components/FeaturedMovie/index.js","components/FeaturedMovie/FeaturedMovie.jsx","components/Header/index.js","components/Header/Header.jsx","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","Tmdb","getHomeList","slug","title","items","getMovieInfo","movieID","type","info","MovieRow","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","NavigateBeforeRounded","style","fontSize","listW","results","length","NavigateNextRounded","marginLeft","width","map","item","key","src","poster_path","alt","original_item","FeaturedMovie","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","Header","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19a68a19.chunk.js","sourcesContent":["const API_KEY = '8a72281fad7754ffadb67926e404b457'\nconst API_BASE = 'https://api.themoviedb.org/3'\n\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`)\n    const json = await req.json();\n    return json\n}\n\n\nexport default{\n    getHomeList: async () => {\n        return[\n            {\n                slug: 'originals',\n                title: 'Originais do Netflix',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Recomendados para você',\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title: 'Em alta',\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Ação',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comédia',\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentários',\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n           \n        ]\n    },\n\n    getMovieInfo: async (movieID, type) => {\n\n        let info = {};\n\n\n        if(movieID){\n            switch(type){\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieID}?language=pt-BR&api_key=${API_KEY}`)\n                break\n\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieID}?language=pt-BR&api_key=${API_KEY}`)\n                break\n            }\n        }\n\n\n        return info\n\n    }\n\n}","import Tmdb from \"./Tmdb\";\nexport default Tmdb","import MovieRow from './MovieRow'\nexport default MovieRow","import React, { useState } from 'react';\nimport './MovieRow.css'\nimport { NavigateBeforeRounded, NavigateNextRounded } from '@material-ui/icons';\n\nexport default ({ title, items }) => {\n\n    const [scrollX, setScrollX] = useState(-400)\n\n    const handleLeftArrow = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2);\n\n        if (x > 0) {\n            x = 0\n        }\n\n        setScrollX(x)\n    }\n\n    const handleRightArrow = () => {\n\n        let x = scrollX - Math.round(window.innerWidth / 2);\n\n        let listW = items.results.length * 150;\n\n        if (window.innerWidth - listW > x) {\n            x = (window.innerWidth - listW) - 60\n        }\n\n        setScrollX(x)\n\n    }\n\n\n    return (\n        <div className='movieRow'>\n            <h2>{title}</h2>\n\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n                <NavigateBeforeRounded style={{ fontSize: 50 }} />\n            </div>\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\n                <NavigateNextRounded style={{ fontSize: 50 }} />\n            </div>\n\n            <div className=\"movieRow--listarea\">\n\n                <div className=\"movieRow--list\"\n                    style={{\n                        marginLeft: scrollX,\n                        width: items.results.length * 150\n                    }}\n                >\n                    {items.results.length > 0 && items.results.map((item, key) => (\n                        <div key={key} className=\"movieRow--item\">\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_item} />\n                        </div>\n                    ))}\n                </div>\n\n\n\n            </div>\n        </div>\n    )\n}","import FeaturedMovie from \"./FeaturedMovie\";\nexport default FeaturedMovie","import React from 'react';\nimport './FeaturedMovie.css'\n\nexport default ({ item }) => {\n\n\n    let firstDate = new Date(item.first_air_date)\n    let genres = []\n\n    for (let i in item.genres) {\n        genres.push(item.genres[i].name)\n    }\n\n\n    let description = item.overview;\n\n    if (description.length > 200) {\n        description = description.substring(0, 200) + '...'\n    }\n\n\n    return (\n        <section\n            className=\"featured\"\n            style={{\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n                backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n            }}\n        >\n            <div className=\"featured--vertical\">\n                <div className=\"featured--horizontal\">\n                    <div className=\"featured--name\">{item.original_name}</div>\n                    <div className=\"featured--info\">\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                    </div>\n                    <div className=\"featured--description\">{description}</div>\n\n                    <div className=\"featured--buttons\">\n                        <a className='featured--watchbutton' href={`/watch/${item.id}`}>&#9658; Assistir</a>\n                        <a className='featured--mylistbutton' href={`/list/add/${item.id}`}>+ Minha Lista</a>\n                    </div>\n\n                    <div className=\"featured--genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\n\n                </div>\n            </div>\n        </section>\n    )\n}","import Header from \"./Header\";\nexport default Header","import React from 'react';\nimport './Header.css'\n\nexport default ({black}) => {\n    return(\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <a href=\"/\">\n                    <img src=\"https://o.remove.bg/downloads/9618dca1-9aea-4735-9024-4344ea3389a0/image-removebg-preview.png\" alt=\"Netflix\" />\n                </a>\n            </div>\n\n            <div className=\"header--user\">\n                <a href=\"/\">\n                    <img src=\"https://i.pinimg.com/originals/b6/77/cd/b677cd1cde292f261166533d6fe75872.png\" alt=\"Usuário logado\" />\n                </a>\n            </div>\n        </header>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Tmdb from './components/Tmdb/';\nimport MovieRow from './components/MovieRow/';\nimport FeaturedMovie from './components/FeaturedMovie/';\nimport Header from './components/Header/';\nimport './App.css'\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null)\n  const [blackHeader, setBlackHeader] = useState(false)\n\n  useEffect(() => {\n    const loadAll = async () => {\n\n      // get movies list\n      let list = await Tmdb.getHomeList();\n      setMovieList(list)\n\n      // featuredMovie\n      let originals = list.filter(items => items.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeaturedData(chosenInfo)\n    }\n\n    loadAll();\n  }, []);\n\n\n  useEffect(() => {\n    const scrollListener = () => window.scrollY > 10 ? setBlackHeader(true) : setBlackHeader(false)\n\n    window.addEventListener('scroll', scrollListener)\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n    }\n  })\n\n  return (\n    <div className='page'>\n\n      <Header black={blackHeader} />\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className='lists'>\n        {movieList.map((item, key) => (\n          <MovieRow title={item.title} items={item.items} key={key} />\n        ))}\n      </section>\n\n      <footer>\n        Feito por André Canton<br />\n        Direitos de imagem para Netflix<br />\n        Dados pegos do site Themoviedb.org<br />\n      </footer>\n\n      {movieList.length <= 0 &&\n        < div className='loading'>\n          <img src='https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif' />\n        </div>\n      }\n    </div >\n  )\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}